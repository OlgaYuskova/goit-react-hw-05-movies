{"version":3,"file":"static/js/883.4ccf3613.chunk.js","mappings":"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","sources":["API.js","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.js","components/SearchMovies/FormSearch.styled.js","components/SearchMovies/SearchMovies.js","pages/Movies.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org';\nconst API_KEY = 'cb47733d8738b823995f01432c3cdbcf';\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport const fetchMovies = async () => {\n  try {\n    const response = await axios.get(`/3/trending/movie/week`);\n    return response;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(`/3/movie/${movieId}`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const fetchMovieCast = async movieId => {\n  try {\n    const response = await axios.get(`/3/movie/${movieId}/credits`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const fetchMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(`3/movie/${movieId}/reviews`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const searchMovie = async query => {\n  try {\n    const response = await axios.get(`/3/search/movie?query=${query}`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n","import styled from 'styled-components';\n\nconst MovieList = styled('ul')`\n  margin-left: 0;\n  width: 100%;\n  padding: 50px;\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 15px;\n  justify-content: center;\n  align-items: center;\n\n  & li {\n    text-align: center;\n    justify-content: center;\n    align-items: center;\n    padding: 5px;\n    display: flex;\n    height: 40px;\n    width: 300px;\n    border: 2px solid #006400;\n    border-radius: 20px;\n  }\n\n  & a {\n    text-decoration: none;\n    color: #008080;\n    font-weight: bold;\n    font-size: 14px;\n  }\n`;\n\nexport default MovieList;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport MovieList from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  return (\n    <>\n      <MovieList>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <NavLink to={`/movies/${movie.id}`}>{movie.title}</NavLink>\n          </li>\n        ))}\n      </MovieList>\n    </>\n  );\n};\n\nexport default MoviesList;\n","import styled from 'styled-components';\n\nconst FormSearch = styled('form')`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n\n  & input {\n    padding: 5px;\n    border-radius: 5px;\n    border: 2px solid #006400;\n    height: 30px;\n    width: 200px;\n    background-color: white;\n    background-position: 10px 10px;\n    background-repeat: no-repeat;\n    padding-left: 40px;\n  }\n\n  & button {\n    padding: 10px;\n    border-radius: 5px;\n    border: 2px solid #006400;\n    height: 40px;\n    width: 100px;\n    background-color: #9acd32;\n    font-size: 14px;\n    font-weight: bold;\n  }\n`;\n\nexport default FormSearch;\n","import { useState } from 'react';\nimport FormSearch from './FormSearch.styled';\n\nconst SearchMovies = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleChange = e => {\n    setQuery(e.target.value);\n  };\n  const reset = () => {\n    setQuery('');\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(query);\n    reset();\n  };\n\n  return (\n    <div>\n      <FormSearch onSubmit={handleSubmit}>\n        <input\n          onChange={handleChange}\n          aria-label=\"select\"\n          className=\"input\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movie\"\n          value={query}\n        />\n        <button type=\"submit\">Search</button>\n      </FormSearch>\n    </div>\n  );\n};\nexport default SearchMovies;\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport SearchMovies from 'components/SearchMovies/SearchMovies';\nimport { searchMovie } from '../API';\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nconst Movie = () => {\n  const [movies, setMovies] = useState(null);\n  //eslint-disable-next-line\n  const [error, setError] = useState('');\n  const [params, setParams] = useSearchParams();\n  const value = params.get('query');\n\n  useEffect(() => {\n    const getMovie = async () => {\n      if (!value) {\n        return;\n      }\n\n      try {\n        const movie = await searchMovie(value);\n        setMovies(movie.results);\n      } catch (error) {\n        setError(error);\n      }\n    };\n\n    getMovie();\n  }, [value]);\n\n  const handleFormSubmit = query => {\n    if (query === '') {\n      return setParams({});\n    }\n\n    setParams({ query });\n  };\n\n  return (\n    <section>\n      <div>\n        <SearchMovies onSubmit={handleFormSubmit} />\n        {movies && <MoviesList movies={movies} />}\n      </div>\n    </section>\n  );\n};\nexport default Movie;\n"],"names":["axios","api_key","fetchMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","sent","abrupt","t0","stop","apply","arguments","fetchMovieDetails","_ref2","_callee2","movieId","_context2","concat","data","_x","fetchMovieCast","_ref3","_callee3","_context3","_x2","fetchMovieReviews","_ref4","_callee4","_context4","_x3","searchMovie","_ref5","_callee5","query","_context5","_x4","styled","_templateObject","_taggedTemplateLiteral","movies","_jsx","_Fragment","children","MovieList","map","movie","NavLink","to","id","title","onSubmit","_useState","useState","_useState2","_slicedToArray","setQuery","_jsxs","FormSearch","e","preventDefault","onChange","target","value","className","type","autoComplete","autoFocus","placeholder","setMovies","_useState3","_useState4","setError","_useSearchParams","useSearchParams","_useSearchParams2","params","setParams","get","useEffect","getMovie","results","SearchMovies","MoviesList"],"sourceRoot":""}